#!/usr/bin/env python

import argparse
import sys

import discocli

#import dpflib

def main():
    args = parse()

    cli = discocli.term('dpf', default='main', debug=args.debug)

    ### Main commands
    cli.add_item('search', 'Search for passwords', stub)
    cli.add_item('add', 'Add password', stub)
    cli.add_item('modify', 'Modify existing password', stub)
    cli.add_item('remove', 'Remove password', stub)

    ### Menus
    # Would be better if we had a way to put commands into sections
    # Also, need a way to run submenu commands via arguments
    cli.add_item('util', 'Utility Menu', util_menu)

    ### Menu exit
    # Would be better if we had a contextual system menu
    def exit_menu(cli, tokens):
        if cli.context is not 'default':
            cli.context = 'default'
        else:
            cli.default_exit_action(tokens)
    cli.add_item('exit', 'Exit', exit_menu, context='system', aliases = ['quit'])

    ### Utility menu
    def util_menu(cli, tokens):
        cli.context = 'util'
    cli.add_item('dump', 'Dump password file', stub, context='util')

    if len(args.command):
        ### Override invalid action (if no specific commands and non-interactive, assume search)
        cli.add_item('invalid_action', 'Invalid Action', stub, context='system', hidden=True)
        cli.run(' '.join(args.command))
    else:
        cli.run()

### Arguments
def parse():
    parser = argparse.ArgumentParser(description='Distributed Password Finder')
    parser.add_argument('-d', '--debug', help='Debug info', action='store_true', default=False)
    parser.add_argument('command', help='<search / add / modify / remove> <...>', nargs=argparse.REMAINDER)
    return parser.parse_args()

### Helper functions
def stub(cli, tokens):
    print("This function is not yet implemented.\n\nArguments: {0}".format(tokens))

if __name__ == '__main__':
    main()
